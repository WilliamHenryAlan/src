#include <iostream>
#include <cassert>

int main() {
	int x = 5;
	assert(x == 5);
	return 0;
}

/*
 使用断言和手动编写 `if` 语句来输出信息的主要区别在于用途和使用场景。

 1. 断言（assertions）的主要目的是在代码中插入检查点，用于验证程序的假设条件是否为真。它们旨在在程序中发现潜在的错误和问题，并且通常在开发和调试阶段使用。当断言条件为假时，程序会立即停止执行，并且通常会输出一条错误消息指示断言失败。这有助于快速定位问题并迅速修复代码。

 2. 手动编写 `if` 语句来输出信息更适合用于特定的条件下执行某些操作，并且这些操作不是必需的或者不应该导致程序终止。通过使用 `if` 语句，你可以根据条件选择性地输出信息或执行某些操作。这对于调试、日志记录或错误处理等情况非常有用。但需要注意的是，手动编写的 `if` 语句需要手动管理条件和输出信息的逻辑。

 因此，断言主要用于验证程序的假设条件，帮助快速发现问题并进行调试，而手动编写 `if` 语句用于条件性输出信息或执行特定的操作，更加灵活和可控。

 总之，断言适用于开发和调试阶段，有助于快速发现问题，而手动编写 `if` 语句适用于条件性输出信息或执行特定操作的情况。
 */
